name: Deploy to Cloudflare

on:
  push:
    branches:
      - ci
      - ci*
      - release
      - release*
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'ci'
        type: choice
        options:
          - ci
          - release

permissions:
  contents: read
  deployments: write
  # contents: write
  # pages: write
  # id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'push' && (startsWith(github.ref_name, 'ci') && 'ci' || 'release') || inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build website
        run: pnpm run build

      - name: Install Wrangler
        run: pnpm install -g wrangler

      - name: Determine environment
        id: env
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            if [[ "${{ github.ref_name }}" == ci* ]]; then
              echo "environment=ci" >> $GITHUB_OUTPUT
            else
              echo "environment=release" >> $GITHUB_OUTPUT
            fi
          else
            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          fi

      # Determine Cloudflare project name
      - name: Determine Cloudflare project name
        id: project
        run: |
          if [[ "${{ steps.env.outputs.environment }}" == "ci"* ]] || [[ "${{ steps.env.outputs.environment }}" == "ci" ]]; then
            echo "project=inline-assets-ci" >> $GITHUB_OUTPUT
            echo "domain=inline-assets-ci.ropean.org" >> $GITHUB_OUTPUT
          else
            echo "project=inline-assets" >> $GITHUB_OUTPUT
            echo "domain=inline-assets.ropean.org" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./website/dist --project-name=${{ steps.project.outputs.project }} --branch ${{ github.ref_name }}

      - name: Deployment summary
        run: |
          cat << EOF >> $GITHUB_STEP_SUMMARY
          ## ✅ Website Deployed

          - 🚀 Deployment completed!
          - 🔧 Environment: ${{ steps.env.outputs.environment }}
          - 🌿 Branch: ${{ github.ref_name }}
          - 🌐 Domain: https://${{ steps.project.outputs.domain }}
          EOF
